{"title":"[python]Markdown图片引用格式批处理桌面应用程序","uid":"fe5a7d1a10c1520fcc6e852f13e033f6","slug":"python-Markdown图片引用格式批处理桌面应用程序","date":"2024-07-05T23:36:35.000Z","updated":"2024-07-05T23:55:40.029Z","comments":true,"path":"api/articles/python-Markdown图片引用格式批处理桌面应用程序.json","keywords":null,"cover":[],"content":"<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用python编写一个exe，实现批量修改图片引用，将修改后的文件生成为 文件名_blog.md。有一个编辑框，允许接收拖动过来md文件，拖入文件时获取文件路径，有一个编辑框编辑修改后的文件的输出路径，用户拖入文件时，就能自动得到输出的路径</span><br><span class=\"line\">作用是将md文件中的例如</span><br><span class=\"line\">![image-20240706062921362](./[git]git拯救项目之恢复到之前提交的记录/image-20240706062921362.png)改成&#123;% asset_img image-20240706062921362.png &#x27;&quot;...&quot; &quot;文章配图&quot;&#x27; %&#125; </span><br><span class=\"line\">![image-20240706063059015](./[git]git拯救项目之恢复到之前提交的记录/image-20240706063059015.png)改成&#123;% asset_img image-20240706063059015.png &#x27;&quot;...&quot; &quot;文章配图&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> wx</span><br><span class=\"line\"><span class=\"keyword\">from</span> pathlib <span class=\"keyword\">import</span> Path</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">使用python编写一个exe，实现批量修改图片引用，将修改后的文件生成为 文件名_blog.md。有一个编辑框，允许接收拖动过来md文件，拖入文件时获取文件路径，有一个编辑框编辑修改后的文件的输出路径，用户拖入文件时，就能自动得到输出的路径</span></span><br><span class=\"line\"><span class=\"string\">作用是将md文件中的例如</span></span><br><span class=\"line\"><span class=\"string\">![image-20240706062921362](./[git]git拯救项目之恢复到之前提交的记录/image-20240706062921362.png)改成&#123;% asset_img image-20240706062921362.png &#x27;&quot;...&quot; &quot;文章配图&quot;&#x27; %&#125; </span></span><br><span class=\"line\"><span class=\"string\">![image-20240706063059015](./[git]git拯救项目之恢复到之前提交的记录/image-20240706063059015.png)改成&#123;% asset_img image-20240706063059015.png &#x27;&quot;...&quot; &quot;文章配图&quot;&#x27; %&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DropTarget</span>(wx.FileDropTarget):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, window</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.window = window</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">OnDropFiles</span>(<span class=\"params\">self, x, y, filenames</span>):</span><br><span class=\"line\">        self.window.set_filenames(filenames)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MainFrame</span>(wx.Frame):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, parent, title</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(parent, title=title, size=(<span class=\"number\">600</span>, <span class=\"number\">400</span>))</span><br><span class=\"line\">        panel = wx.Panel(self)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.text_input = wx.TextCtrl(panel, style=wx.TE_MULTILINE | wx.TE_READONLY)</span><br><span class=\"line\">        self.text_output = wx.TextCtrl(panel, style=wx.TE_MULTILINE | wx.TE_READONLY)</span><br><span class=\"line\">        self.btn_convert = wx.Button(panel, label=<span class=\"string\">&quot;开始转换&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        vbox = wx.BoxSizer(wx.VERTICAL)</span><br><span class=\"line\">        vbox.Add(self.text_input, proportion=<span class=\"number\">1</span>, flag=wx.EXPAND | wx.ALL, border=<span class=\"number\">5</span>)</span><br><span class=\"line\">        vbox.Add(self.text_output, proportion=<span class=\"number\">1</span>, flag=wx.EXPAND | wx.ALL, border=<span class=\"number\">5</span>)</span><br><span class=\"line\">        vbox.Add(self.btn_convert, flag=wx.EXPAND | wx.ALL, border=<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        panel.SetSizer(vbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.SetDropTarget(DropTarget(self))</span><br><span class=\"line\"></span><br><span class=\"line\">        self.Bind(wx.EVT_BUTTON, self.on_convert, self.btn_convert)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.Centre()</span><br><span class=\"line\">        self.Show(<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">set_filenames</span>(<span class=\"params\">self, filenames</span>):</span><br><span class=\"line\">        self.filenames = filenames</span><br><span class=\"line\">        self.text_input.SetValue(<span class=\"string\">&#x27;\\n&#x27;</span>.join(filenames))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">on_convert</span>(<span class=\"params\">self, event</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> filename <span class=\"keyword\">in</span> self.filenames:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> filename.lower().endswith(<span class=\"string\">&#x27;.md&#x27;</span>):</span><br><span class=\"line\">                input_file_path = Path(filename)</span><br><span class=\"line\">                output_file_path = input_file_path.with_name(input_file_path.stem + <span class=\"string\">&#x27;_blog&#x27;</span> + input_file_path.suffix)</span><br><span class=\"line\">                self.text_output.AppendText(<span class=\"built_in\">str</span>(output_file_path) + <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">                self.convert_markdown_images(<span class=\"built_in\">str</span>(input_file_path), <span class=\"built_in\">str</span>(output_file_path))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">convert_markdown_images</span>(<span class=\"params\">self, input_file, output_file</span>):</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(input_file, <span class=\"string\">&#x27;r&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">            content = file.read()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 修改正则表达式，以匹配Markdown图片链接</span></span><br><span class=\"line\">        pattern = <span class=\"string\">r&#x27;\\!\\[(?P&lt;alt_text&gt;.*?)\\]\\((?P&lt;path&gt;.*/)?(?P&lt;file_name&gt;.*?)(?P&lt;extension&gt;\\..*)\\)&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 遍历所有匹配项并构建新的替换字符串</span></span><br><span class=\"line\">        new_content = re.sub(pattern, <span class=\"keyword\">lambda</span> m: <span class=\"string\">f&#x27;&#123;&#123;% asset_img <span class=\"subst\">&#123;m.group(<span class=\"string\">&quot;file_name&quot;</span>)&#125;</span><span class=\"subst\">&#123;m.group(<span class=\"string\">&quot;extension&quot;</span>)&#125;</span> \\&#x27;&quot;<span class=\"subst\">&#123;m.group(<span class=\"string\">&quot;alt_text&quot;</span>)&#125;</span>&quot; &quot;文章配图&quot;\\&#x27; %&#125;&#125;&#x27;</span>, content)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将修改后的内容写入输出文件</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(output_file, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">            file.write(new_content)</span><br><span class=\"line\"></span><br><span class=\"line\">        wx.MessageBox(<span class=\"string\">f&quot;已成功转换&#x27;<span class=\"subst\">&#123;input_file&#125;</span>&#x27;至&#x27;<span class=\"subst\">&#123;output_file&#125;</span>&#x27;&quot;</span>, <span class=\"string\">&quot;转换成功&quot;</span>, wx.OK)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = wx.App()</span><br><span class=\"line\">    MainFrame(<span class=\"literal\">None</span>, title=<span class=\"string\">&quot;Markdown 图片链接转换器&quot;</span>)</span><br><span class=\"line\">    app.MainLoop()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = wx.App()</span><br><span class=\"line\">    MainFrame(<span class=\"literal\">None</span>, title=<span class=\"string\">&quot;Markdown Image Link Converter@萌狼蓝天(mllt.cc)&quot;</span>)</span><br><span class=\"line\">    app.MainLoop()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"/./python-Markdown%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E6%A0%BC%E5%BC%8F%E6%89%B9%E5%A4%84%E7%90%86%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/image-20240706075502201.png\" alt=\"image-20240706075502201\"></p>\n","feature":true,"text":"需求1234使用python编写一个exe，实现批量修改图片引用，将修改后的文件生成为 文件名_blog.md。有一个编辑框，允许接收拖动过来md文件，拖入文件...","permalink":"/post/python-Markdown图片引用格式批处理桌面应用程序","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9C%80%E6%B1%82\"><span class=\"toc-text\">需求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">效果</span></a></li></ol></li></ol>","author":{"name":"萌狼蓝天","slug":"blog-author","avatar":"http://q.qlogo.cn/headimg_dl?dst_uin=2952458479&spec=640&img_type=jpg","link":"/","description":"乖乖狼科技CTO","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"新的开始","uid":"b25a5766010e8517185686396156619a","slug":"新的开始","date":"2024-07-05T19:34:38.000Z","updated":"2024-07-05T22:08:05.970Z","comments":true,"path":"api/articles/新的开始.json","keywords":null,"cover":[],"text":"二零二四年七月初的时候，我和小学、初中、高中的 在同一个镇上居住的 老同学相聚出游，登山品茶。距离上一次见面，还是在上一次了。 如今的我们，或面临着毕业，或面临...","permalink":"/post/新的开始","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"杂谈","slug":"杂谈","count":1,"path":"api/tags/杂谈.json"}],"author":{"name":"萌狼蓝天","slug":"blog-author","avatar":"http://q.qlogo.cn/headimg_dl?dst_uin=2952458479&spec=640&img_type=jpg","link":"/","description":"乖乖狼科技CTO","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}